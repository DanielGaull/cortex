module stdlib {
    extend<T: ty> span<T> {
        fn __indexGet(&this, index: number): T {
            let boxThis = anon this;
            let boxedResult = corelib::spanIndexGetSingleAnonymous(boxThis, index);
            deanon<T> boxedResult
        }

        fn __indexSet(&mut this, index: number, value: T): void {
            let boxThis = anon this;
            let boxValue = anon value;
            corelib::spanIndexAssignSingleAnonymous(boxThis, index, boxValue);
        }
    }

    module collections {
        struct List<T: ty> {
            items: &mut span<T>,
            len: number,

            
        }
    }
}
