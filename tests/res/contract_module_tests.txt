module mystd {
    contract MyAdd<T> {
        fn add(this, other: T): T;
    }

    struct MyAddFollower follows MyAdd<i32> {
        value: i32,

        fn add(this, other: i32): i32 {
            this.value + other
        }
    }
}

extend i32 follows mystd::MyAdd<i32> {
    fn add(this, other: i32): i32 {
        this + other
    }
}

fn performAdd<T>(first: follows mystd::MyAdd<T>, second: T): T {
    first.add(second)
}
