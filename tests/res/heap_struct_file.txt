struct Box {
    value: i32,

    fn increment(&mut this, amount: i32) {
        this.value += amount;
    }
}

struct BoxedBox {
    box: &mut Box,

    fn getBox(&mut this): &mut Box {
        this.box
    }
}

struct Access {
    dummy: i32,

    fn __indexGet(&this, val: i32): i32 {
        val
    }
    fn __indexSet(&mut this, idx: i32, val: i32) {
        this.dummy = idx + val;
    }
}

fn getBox(value: i32): &mut Box {
    heap Box {
        value: value,
    }
}
fn incValue(box: &mut Box, amt: i32): void {
    box.value += amt;
}
