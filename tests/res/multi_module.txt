module First {
    struct Box<T> {
        item: T,
    }

    fn id<T>(val: T): T {
        val
    }
}

module Second {
    fn identity<T>(v: T): T {
        v
    }
}

fn test(value: i32): i32 {
    First::id(Second::identity(value))
}

fn test2(value: i32): i32 {
    let box: First::Box<i32>? = First::Box<i32> { item: value };
    if box == none {
        let one = First::id(value);
        let two = Second::identity(one);
        two
    } else {
        let three = First::id(value);
        let four = Second::identity(three);
        four
    }
}
