import mylib::AFunc as MyLibAFunc;
import mylib::LibBox as LibBox;

struct StringWrapper follows MyLibAFunc {
    value: string,

    fn a(&this, other: number): number {
        this.value.len() * other
    }
}

fn multiplyStringLengths(string1: string, amount: number): number {
    let wrapper = heap StringWrapper {
        value: string1,
    };
    wrapper.a(amount)
}

module libBoxUtils {
    import mylib::LibBox as LibBox;

    extend LibBox<T> {
        fn duplicate(&this): &mut LibBox<T> {
            heap LibBox<T> {
                item: this.item
            }
        }
    }
}
